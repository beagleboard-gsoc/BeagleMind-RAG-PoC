name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  code-format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black flake8

      - name: Run Black check
        id: black-check
        continue-on-error: true
        run: |
          black --check . || echo "needs_formatting=true" >> $GITHUB_OUTPUT

      - name: Auto-format with Black
        if: steps.black-check.outputs.needs_formatting == 'true'
        run: |
          black .
          
      - name: Commit formatting changes
        if: steps.black-check.outputs.needs_formatting == 'true' && github.event_name == 'pull_request'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add .
          git commit -m "style: Auto-format with Black"
          git push

  build-and-publish:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    name: Build and Publish to PyPI
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12' 

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build package
        run: |
          python -m build

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          twine upload dist/*
  sync:
    needs: code-format
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Push to GitLab
        run: |
          git config --global user.name 'fayezzouari'
          git config --global user.email 'fayez.zouari@insat.ucar.tn'
          git remote add gitlab https://fayezzouari:${{ secrets.GITLAB_TOKEN }}@gitlab.com/fayezzouari/BeagleMind-RAG-PoC
          git push gitlab main --force
